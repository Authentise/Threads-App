# DO NOT EDIT THIS FILE
#
# Handles parsing command line args, and authenticating the requests Session with Threads

import argparse
import json
import requests
import sys

from handler import handler
from utils import BASE_URL


def _login(session: requests.Session, username: str, password: str) -> bool:
    # Log in, and save cookie in the session
    response = session.post(f"{BASE_URL}/auth/login/", json={"email": username, "password": password})
    return response.status_code == 200

# Unwraps a multi-value argparse field into a dictionary
class _ParseKwargs(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        setattr(namespace, self.dest, dict())
        for value in values:
            key, value = value.split('=')
            getattr(namespace, self.dest)[key] = value

def main():
    # Retrieve email and password from command line args
    parser = argparse.ArgumentParser(
        prog='Threads Command Line App',
        description='Interact with the Threads API from the command line',
    )
    parser.add_argument('email')
    parser.add_argument('password')
    parser.add_argument('--kwargs', nargs='*', action=_ParseKwargs)
    args = parser.parse_args()


    session = requests.session()
    # Authenticate
    if not _login(session, args.email, args.password):
        print("Failed to login. Check your credentials and try again.")
        sys.exit(1)

    output = handler(session, args.kwargs)
    if output:
        print(json.dumps(output, indent=4))

if __name__ == "__main__":
    main()
